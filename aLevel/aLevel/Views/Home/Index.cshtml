<!DOCTYPE html>
<style>

    .node {
        cursor: pointer;
          }

    .node:hover {
        stroke: #000;
        stroke-width: 1.5px;
                }

    .node--leaf {
        fill: white;
                }

    .label {
        font: 11px "Helvetica Neue", Helvetica, Arial, sans-serif;
        text-anchor: middle;
        text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, -1px 0 0 #fff, 0 -1px 0 #fff;
           }

    .label,
    .node--root,
    .node--leaf {
        pointer-events: none;
                }

</style>
<svg width="1860" height="1860" font-family="sans-serif" font-size="10" text-anchor="middle"></svg>
<script>

    var classes = [];

    for (i = 0; i < 100; i ++) {
        classes.push({"id" : i.toString(), "value" : i, "color": randoColor()});
    }
    //var i = 5;
    //classes.push({ "id": i.toString(), "value": 50, "color": '#42f445' });

    alert(classes);

    var svg = d3.select("svg"),
        width = +svg.attr("width"),
        height = +svg.attr("height");

    var format = d3.format(",d");

    var pack = d3.pack()
        .size([width, height])
        .padding(1.5);

    var root = d3.hierarchy({ children: classes })
        .sum(function(d) { return d.value; })
        .each(function(d) {
            if (id = d.data.id) {
                var id, i = id.lastIndexOf(".");
                d.id = id;
                d.package = id.slice(0, i);
                d.class = id.slice(i + 1);
            }
        });

    var node = svg.selectAll(".node")
        .data(pack(root).leaves())
        .enter().append("g")
        .attr("class", "node")
        .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

    node.append("circle")
        .attr("id", function(d) { return d.id; })
        .attr("r", function(d) { return d.r; })
        .style("fill", function(d) { return d.data.color });

    node.append("clipPath")
        .attr("id", function(d) { return "clip-" + d.id; })
        .append("use")
        .attr("xlink:href", function(d) { return "#" + d.id; });

    node.append("text")
        .attr("clip-path", function(d) { return "url(#clip-" + d.id + ")"; })
        .selectAll("tspan")
        .data(function(d) { return d.class.split(/(?=[A-Z][^A-Z])/g); })
        .enter().append("tspan")
        .attr("x", 0)
        .attr("y", function(d, i, nodes) { return 13 + (i - nodes.length / 2 - 0.5) * 10; })
        .text(function(d) { return d; });

    node.append("title")
        .text(function (d) { return d.id + "\n" + format(d.value); });

    function randoColor() {
        var rand = Math.floor(Math.random()*2);
        if (rand === 1) {
            return '#42f445';
        } else {
            return '#f44141';
        }        
    }
    

</script>