@model IEnumerable<aLevel.Models.SentimentViewModel>
@{
    ViewBag.Title = "Search";
}

<!DOCTYPE html>
<meta charset="utf-8">
<canvas width="960" height="500"></canvas>
<script src="//d3js.org/d3.v4.min.js"></script>
<script>

    var data = [0,0,0,0,0];

    @foreach (var item in Model)
    {
        if (item.SentimentText == "Very Negitive")
        {
            @:data[0]++;
        } else if (item.SentimentText == "Negative")
        {
            @:data[1]++;
        } else if (item.SentimentText == "Neutral")
        {
            @:data[2]++;
        }else if (item.SentimentText == "Positive")
        {
            @:data[3]++;
        }
        else if (item.SentimentText == "Very Positvie")
        {
            @:data[4]++;
        }
    }

    alert(data);

    var canvas = document.querySelector("canvas"),
        context = canvas.getContext("2d");

    var width = canvas.width,
        height = canvas.height,
        radius = Math.min(width, height) / 2;

    var colors = [
        "#E30202", "#FF3737", "#FCD72D", "#8EDC23", "#2FCF0B"
    ];

    var arc = d3.arc()
        .outerRadius(radius - 10)
        .innerRadius(radius - 70)
        .padAngle(0.03)
        .context(context);

    var pie = d3.pie();

    var arcs = pie(data);

    context.translate(width / 2, height / 2);

    context.globalAlpha = 0.5;
    arcs.forEach(function (d, i) {
        context.beginPath();
        arc(d);
        context.fillStyle = colors[i];
        context.fill();
    });

    context.globalAlpha = 1;
    context.beginPath();
    arcs.forEach(arc);
    context.lineWidth = 1.5;
    context.stroke();

</script>

<table class="tablesorter" id="tweetTable">
    <thead>
    <tr>
        <th>
            Index
        </th>
        <th>
            @Html.DisplayNameFor( model => model.ImageUrl )
        </th>
        <th>
            @Html.DisplayNameFor( model => model.ScreenName )
        </th>
        <th>
            @Html.DisplayNameFor( model => model.Text )
        </th>
        <th>
            @Html.DisplayNameFor( model => model.CreatedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsVerified)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RetweetCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SentimentText)
        </th>

    </tr>
    </thead>
    
    <tbody>
    @{
        var i = 0;
    }
    @foreach( var item in Model )
    {
        <tr>
            <td>
                @(++i)
            </td>
            <td>
                <img src="@item.ImageUrl" alt="@item.ScreenName"/>
            </td>
            <td>
                @Html.DisplayFor( modelItem => item.ScreenName )
            </td>
            <td>
                @Html.DisplayFor( modelItem => item.Text )
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                <span style="display: none">@item.IsVerified</span>
                @if (item.IsVerified == true)
                {
                    <img src="~/img/1307051244_737.png" alt="@item.IsVerified" />
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RetweetCount)
            </td>
            <td>
                @Html.DisplayFor( modelItem => item.SentimentText )
            </td>
        </tr>
    }
    </tbody>

</table>
    





@section scripts {
    <script language="javascript">
        $( function()
        {
            $( '#tweetTable' ).tablesorter([1,0]);
        })
    </script>
}
